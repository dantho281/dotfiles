# Linux specific configuration
if [ "$(uname -s)" != "Darwin" ]; then
    source /etc/os-release
    # Arch Linux specific configuration
    if [ "$ID" = "arch" ]; then
        # Add macOS aliases
        alias pbcopy="xclip -sel clip"
        alias pbpaste="xclip -out -sel clip"
    fi
    # Start sway
    if [ -z $DISPLAY  ] && [ "$(tty)" = "/dev/tty1"  ]; then
        exec sway
    fi
    # Set up devKitPro
    export DEVKITPRO=/opt/devkitpro
    export DEVKITARM=/opt/devkitpro/devkitARM
    export DEVKITPPC=/opt/devkitpro/devkitPPC
fi
# macOS specific configuration
if [ "$(uname -s)" = "Darwin" ]; then
    # Add MacPorts to PATH 
    export PATH="/opt/local/bin:/opt/local/sbin:$PATH"
    if [ "$(hostname -s)" = "DanielskBookPro" ]; then
        # Set work PythonPath
        export PYTHONPATH=$PYTHONPATH:$HOME/code/solution_performance/PythonLib:$HOME/code/uiautomation:$HOME/code/regression/Workspace_Web_UI_Tests/PythonLib:$HOME/code/versioning
        # Add JMeter to PATH
        export PATH=$PATH:$HOME/.bin/apache-jmeter-5.4.3/bin
    fi
fi
# GPG configuration
export GPG_TTY="$(tty)"
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent
# zsh-history-substring-search configuration
bindkey '^[[A' history-substring-search-up # or '\eOA'
bindkey '^[[B' history-substring-search-down # or '\eOB'
HISTORY_SUBSTRING_SEARCH_ENSURE_UNIQUE=1
# Functions to enable .kube/config
mmrk8s() {
    export KUBECONFIG=$HOME/.kube/mmr-config
}
cbgk8s() {
    export KUBECONFIG=$HOME/.kube/cbg-config
}
# Enable thefuck
eval $(thefuck --alias)
# Misc aliases
alias cls=clear
alias enby=man
# Misc variables
export THEFUCK_PRIORITY="git_hook_bypass=1100"
export PATH=$HOME/.bin:$PATH

